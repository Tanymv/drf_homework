version: "3"

services:

  db:
    image: postgres:latest
    volumes:
      - pg_data:/var/lib/postgresql/data
#    env_file:
#      - .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5


  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping" ]
      interval: 10s
      timeout: 5s
      retries: 5


  web:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
#      migration:
#        condition: service_completed_successfully
    tty: true
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      - .:/lms_app


#  migration:
#    build: .
#    command: python manage.py makemigrations && python manage.py migrate
#    depends_on:
#      - db
#    volumes:
#      - .:/lms_app


  celery:
    build: .
    depends_on:
      web:
        condition: service_started
    tty: true
    command: celery -A config worker -l INFO
    volumes:
      - .:/lms_app


  celery-beat:
    build: .
    depends_on:
      web:
        condition: service_started
      db:
        condition: service_healthy
    tty: true
    command: celery -A config beat -l INFO
    volumes:
      - .:/lms_app

volumes:
  pg_data: